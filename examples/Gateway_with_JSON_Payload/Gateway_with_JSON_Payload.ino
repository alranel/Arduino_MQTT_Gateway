/*
  This example shows how to configure a MQTT devices using a JSON
  payload.

  For this to work, you'll need to create the following variables in
  Arduino Cloud:
  * tasmota01_relay      (type: boolean)
  * shelly_button        (type: string)
  * shelly1plus_relay    (type: boolean)

  License: public domain.
*/

#include "arduino_secrets.h"
#include "thingProperties.h"
#include "Arduino_MQTT_Gateway.h"

void setup() {
  /* This is the standard boilerplate generated by Arduino Cloud */
  Serial.begin(9600);
  delay(1500); 
  initProperties();
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  /* Here we configure some devices: */

  // Tasmota - relay
  // In this case, incoming status updates are formatted like this:
  // { "POWER": "ON" }
  // so we use the setStatePayloadJSONField() method to tell the gateway 
  // to extract the actual payload from the "POWER" key instead of using
  // the entire payload.
  ArduinoMQTTGateway.add(tasmota01_relay)
    .setStateTopic("stat/myRelay/RESULT")
    .setCommandTopic("cmnd/myRelay/POWER")
    .setStatePayloadJSONField("POWER")
    .setStatePayload("ON", "OFF")
    .setCommandPayload("ON", "OFF");

  // Shelly Button
  // In this case, when the button is pressed the following status update
  // is sent through the state topic:
  // { "event": "S", "cnt": 1 }
  // Where "event" is S for a single press, SS for a double press and so on.
  // We store this payload in a String property. 
  // See the Automation example to understand what can we do with this string.
  ArduinoMQTTGateway.add(shelly_button)
    .setStateTopic("shellies/shellybutton1-98CDAC2DACFD/input_event/0")
    .setStatePayloadJSONField("event");
  
  // Shelly 1 Plus
  // In this case, not only the incoming status updates are formatted as 
  // JSON, but we also need to send commands as JSON. Luckily enough, we
  // can hard-code them like follows:
  ArduinoMQTTGateway.add(shelly1plus_relay)
    .setStateTopic("shellies/shelly1plus-XXX/status/switch:0")
    .setCommandTopic("shellies/shelly1plus-XXX/rpc")
    .setStatePayloadJSONField("output")
    .setCommandPayload(
        "{\"id\":\"switch-on\",\"src\":\"shelly1plus-XXX/status\",\"method\":\"Switch.Set\",\"params\": {\"id\":0,\"on\":true}}",
        "{\"id\":\"switch-off\",\"src\":\"shelly1plus-XXX/status\",\"method\":\"Switch.Set\",\"params\": {\"id\":0,\"on\":false}}"
      );
}

void loop() {
  ArduinoCloud.update();
  ArduinoMQTTGateway.loop();
}

